% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{process_age}
\alias{process_age}
\title{Transform age in months and age in days with a data frame}
\usage{
process_age(df, DoS = NULL, DoB = NULL, age)
}
\arguments{
\item{df}{The input data frame.}

\item{DoS, DoB}{Vectors containing dates. \code{DoS} refers to the day, month
and year when the data was collected; while \code{DoB} refers to the date when the
child was born (birth-date). By default, both arguments are \code{NULL}. This is
makes \code{process_age()} work even in datasets where either survey date or birth-
data is not available, so the \code{process_age()} works on already given age
variable.}

\item{age}{A numeric vector containing already given age in months, usually an
integer in the input data as it is estimated using local event calendars.}
}
\value{
A data frame of the same length as the input data frame, but of a
different width. If \code{DoS} or \code{DoB} are available, two new vectors are added
to the data frame: \code{age} in months with two decimal points and \code{age_day} which
is age in days with decimal two decimal points.
}
\description{
\code{process_age()} helps you get the variable age in the right format and ready
to be used for downstream workflow, i.e., get z-scores, as well as exclude
age values that are out-of-range.
}
\examples{
 # Have a sample data ----
 bir_date <- as.Date(c(
 "2022-04-04", "2021-05-01", "2022-04-04", "2021-05-01", "2023-05-24" ))

 surv_date <- as.Date(c("2024-01-05", "2024-01-05", "2024-01-05",
  "2024-01-08", "2024-01-07" ))

 age <- seq(6,10)

 df <- data.frame(surv_date, bir_date, age)

 ## Apply function ----

 df |>
 process_age(DoS = "surv_date", DoB = "bir_date", age = "age")

}
