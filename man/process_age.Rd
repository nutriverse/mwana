% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/age.R
\name{process_age}
\alias{process_age}
\title{Process age}
\usage{
process_age(df, svdate = NULL, birdate = NULL, age)
}
\arguments{
\item{df}{Input data frame holding the required variables.}

\item{svdate}{A vector of class "Date" holding values corresponding to
the data collection date. Default is \code{NULL}.}

\item{birdate}{A vector of class "Date" holding values corresponding to
the child's date of birth. Default is \code{NULL}.}

\item{age}{A numeric vector holding age values in months, usually estimated
using local event calendars.}
}
\value{
A data frame of the same length as the input with an additional
column. A new variable, \code{age_day}, is added to the output data frame whilst
the \code{age} variable gets filled where applicable, and then any values outside
the range of 6.0 to 59.99 months get replaced with \code{NA}.
}
\description{
\code{process_age()} helps you to get the variable age in the format needed for
the analyses in the downstream workflow. Fundamentally, it calculates age in
months from on the basis of the difference between the data collection date
and the child's date of birth and then censors age values that are out of range.
}
\examples{

## A sample data ----
df <- data.frame(
survy_date = as.Date(c(
"2023-01-01", "2023-01-01", "2023-01-01", "2023-01-01", "2023-01-01")),
birthdate = as.Date(c(
"2019-01-01", NA, "2018-03-20", "2019-11-05", "2021-04-25")),
age = c(NA, 36, NA, NA, NA)
)

## Apply the function ----
df |>
process_age(
svdate = "survy_date",
birdate = "birthdate",
age = age
)

}
