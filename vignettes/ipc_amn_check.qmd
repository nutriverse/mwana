---
title: "Checking if IPC Acute Malnutrition sample size requirements were met"
author: TomÃ¡s Zaba
vignette: >
  %\VignetteIndexEntry{Checking if IPC Acute Malnutrition sample size requirements were met}
  %\VignetteEngine{quarto::html}
  %\VignetteEncoding{UTF-8}
---

```{r}
#| label: global-setup

library(mwana)
```
Evidence on the prevalence of acute malnutrition used in the IPC Acute Malnutrition (IPC AMN) can come from different sources, namely: representative surveys, screenings or community-based surveillance system (known as sentinel sites). The IPC set minimum sample size requirements for each of these sources. Details can be read from the [IPC Manual version 3.1 ](https://www.ipcinfo.org/ipcinfo-website/resources/ipc-manual/en/).  

In the IPC AMN analysis workflow, the very first step of a data analyst is to check if these requirements were met. This is done for each area meant to be included in the IPC AMN analysis. For this, `mwana` provides a handy function: `mw_check_ipcamn_ssreq()`.

To demonstrate its usage, we will use a built-in sample dataset `anthro.01`.

```{r}
#| label: view-data
#| echo: true
#| eval: false

head(anthro.01)
```

```{r}
#| label: view-data.
#| echo: false

head(anthro.01)
```

`anthro.01` contains anthropometry data from SMART surveys from anonymized locations. We can check further details about the dataset by calling `help(anthro.01)` in `R` console. 

Now that we are acquainted with the dataset, we can proceed to execute the task. To achieve this, we simply do:

```{r}
#| label: check
#| echo: true
#| eval: false

mw_check_ipcamn_ssreq(
  df = anthro.01,
  cluster = cluster,
  .source = "survey"
)
```

Or we can also choose to chain the data object to the function using the pipe operator: 
```{r}
#| label: pipe_operator
#| echo: true
#| eval: false

anthro.01 |>
  mw_check_ipcamn_ssreq(
    cluster = cluster,
    .source = "survey"
  )
```

Either way, the returned output will be: 
```{r}
#| label: view_check
#| echo: false

anthro.01 |>
  mw_check_ipcamn_ssreq(
    cluster = cluster,
    .source = "survey"
  )
```

A table (of class `tibble`) is returned with three columns:  

  + Column `n_clusters` counts the number of unique cluster IDs in the dataset.  
  + Column `n_obs` counts the number of children in the dataset.  
  + Column `meet_ipc` indicates whether the IPC AMN sample size requirements (for surveys in this case) were met or not.

The above output is not quite useful yet as we often deal with multiple area dataset. We can get a summarised table by area as follows: 
```{r}
#| label: group_by
#| echo: true
#| eval: false

## Load the dplyr package ----
library(dplyr)

## Use the group_by() function ----
anthro.01 |>
  group_by(area) |>
  mw_check_ipcamn_ssreq(
    cluster = cluster,
    .source = "survey"
  )
```

This will return: 

```{r}
#| label: view_group_by
#| echo: false
#| message: false

library(dplyr)

anthro.01 |>
  group_by(area) |>
  mw_check_ipcamn_ssreq(
    cluster = cluster,
    .source = "survey"
  )
```

For screening or sentinel site-based data, we approach the task the same way; we only have to change the `.source` parameter to "screening" or to "ssite" as appropriate, as well as to supply `cluster` with the right column name of the sub-areas inside the main area (villages, localities, comunas, communities, etc).
